# docker-compose.yml
# Versão: 2.2 (Remove tag 'version' obsoleta)
# Descrição: Orquestra os contêineres do Airflow e da aplicação SIGTAP ETL.

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres_db
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5433:5432"
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: airflow_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_webserver
    depends_on: [postgres, redis]
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=${AIRFLOW_UID}
      - AIRFLOW_GID=${AIRFLOW_GID}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config.ini:/opt/airflow/config.ini
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_scheduler
    depends_on: [airflow-webserver]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config.ini:/opt/airflow/config.ini
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=${AIRFLOW_UID}
      - AIRFLOW_GID=${AIRFLOW_GID}
    command: scheduler

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_worker
    depends_on: [airflow-scheduler]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config.ini:/opt/airflow/config.ini
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=${AIRFLOW_UID}
      - AIRFLOW_GID=${AIRFLOW_GID}
    command: worker

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_init
    depends_on: [postgres, redis]
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=${AIRFLOW_UID}
      - AIRFLOW_GID=${AIRFLOW_GID}
    command: >
      bash -c "
        airflow db init &&
        airflow users create --role Admin --username admin --email admin@example.com --firstname Admin --lastname User --password admin
      "

  sigtap-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigtap_etl_web
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app/app
      - ./src:/app/src
      - ./config.ini:/app/config.ini
      - ./run_app.py:/app/run_app.py
      - downloads_data:/app/downloads
    environment:
      - PYTHONUNBUFFERED=1

volumes:
  airflow_postgres_data:
  downloads_data:doc