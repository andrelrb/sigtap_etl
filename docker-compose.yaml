version: "3.9"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres_sigtap12
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres_sigtap12"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_init
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./downloads:/opt/airflow/downloads
      - airflow_db_data:/opt/airflow
    command: >
      bash -c "
        airflow db init &&
        airflow users create --role Admin --username admin --email admin@example.com --firstname Admin --lastname User --password admin
      "

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config.ini:/opt/airflow/config.ini
      - ./downloads:/opt/airflow/downloads
      - airflow_db_data:/opt/airflow
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config.ini:/opt/airflow/config.ini
      - ./downloads:/opt/airflow/downloads
      - airflow_db_data:/opt/airflow
    command: scheduler

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow_worker
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:root@postgres:5432/postgres_sigtap12
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config.ini:/opt/airflow/config.ini
      - ./downloads:/opt/airflow/downloads
      - airflow_db_data:/opt/airflow
    command: celery worker

volumes:
  postgres_data:
  airflow_db_data:
